#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-smartd
# REQUIRE: FILESYSTEMS
# BEFORE: smartd

. /etc/rc.subr

: ${smartd_config="/usr/local/etc/smartd.conf"}

parse_devlist()
{
	disk=$1

	awk -v dev=$disk '{
	  if ($NF~"^\\("dev",")
	    # Highpoint Rocket Raid controller
	    if ($1=="<HPT")
	      print "/dev/hptrr -d hpt,"$(NF-1)+1"/"$(NF-3)+1
	    # Common device
	    else print "/dev/"dev
	}'
}

get_prop_dev()
{
	disk=$1
	camcontrol devlist | parse_devlist $disk
}

generate_smartd_cfg()
{
	local IFS=\|
	cat <<EOF
################################################
# smartd.conf generated by FreeNAS
################################################
EOF
	local mode diff info crit email
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT smart_powermode, smart_difference, smart_informal, smart_critical, smart_email FROM services_smart ORDER by -id LIMIT 1" |
	while read mode diff info crit email; do

		local ident opts type hour daymonth month dayweek
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_identifier, disk_smartoptions, smarttest_type, smarttest_hour, smarttest_daymonth, smarttest_month, smarttest_dayweek FROM storage_disk d LEFT JOIN system_smarttest s ON d.id=s.smarttest_disk_id WHERE disk_togglesmart=1" |
		while read ident opts type hour daymonth month dayweek; do
			disk=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py identifier_to_device "${ident}")
			prop_dev=$(get_prop_dev ${disk})
			case "$disk" in
			None|*zvol*)
				continue
				;;
			esac
			eval "/usr/local/sbin/smartctl -i ${prop_dev}" | grep -q "SMART support is: Enabled" || continue
			echo -n "${prop_dev}"
			echo -n " -n ${mode}"
			echo -n " -W ${diff},${info},${crit}"
			if [ -n "${email}" ]; then
				echo -n " -m ${email}"
			fi
			if [ -n "${type}" ]; then

			nhour=$(echo "${hour}"|awk -F ',' '{ if($0 ~ /^\*\/[0-9]+$/) {
				printf "(";
				num = int(substr($0, 3));
				for(i=0;i<24;i+=num) {
					printf "%.2d", i;
					if(i+num < 24) printf "|"
				}
				printf ")"
			} else if($0 == "*") {
				printf "..";
			} else if($0 != "..") {
				printf "(";
				for(i=1;i<NF+1;i++) {
					printf "%.2d", $i;
					if(i != NF) printf "|"
				};
				printf ")"
			} else printf $0 }')
			ndayweek=$(echo "${dayweek}"|tr -s "," "|"|awk '{if($0 != "..") printf "(%s)", $0; else printf $0 }')
			nmonth=$(echo "${month}"|awk -F ',' '{ if($0 != "..") {
				printf "(";
				for(i=1;i<NF+1;i++) {
					printf "%.2d", $i;
					if(i != NF) printf "|"
				};
				printf ")"
			} else printf $0 }')
			ndaymonth=$(echo "${daymonth}"|awk -F ',' '{ if($0 ~ /^\*\/[0-9]+$/) {
				printf "(";
				num = int(substr($0, 3));
				for(i=1;i<32;i+=num) {
					printf "%.2d", i;
					if(i+num < 32) printf "|"
				}
				printf ")"
			} else if($0 == "*") {
				printf "..";
			} else if($0 != "..") {
				printf "(";
				for(i=1;i<NF+1;i++) {
					printf "%.2d", $i;
					if(i != NF) printf "|"
				};
				printf ")"
			} else printf $0 }')

			echo -n " -s ${type}/${nmonth}/${ndaymonth}/${ndayweek}/${nhour}"
			fi
			echo " $opts"
		done
	done
}

generate_smartd()
{
	generate_smartd_cfg > ${smartd_config}
}

name=ix-smartd
start_cmd=generate_smartd
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
